boolean collide(int x1, int x2, int y1, int y2) {
    return java.lang.Math.abs(x1 - x2) == java.lang.Math.abs(y1 - y2)
}

void dfs(int dep, int n, int[] ans, int[] x, boolean[] vis) {
    if dep >= n {
        ans[0] += 1
        return
    }
    for i: 0 to n - 1 {
        if vis[i] continue
        vis[i] = true
        x[dep] = i
        var legal = true
        for var j = 0; j < dep; j += 1 {
            if collide(j, dep, x[j], i) {
                legal = false
                break
            }
        }
        if legal dfs(dep + 1, n, ans, x, vis)
        vis[i] = false
    }
}

void main(string[] args) {
    for N: 1 to 12 {
        var ans = new int[1]
        var x = new int[N]
        var vis = new boolean[N]
        dfs(0, N, ans, x, vis)
        print ans[0] // 1 0 0 2 10 4 40 92 352 724 2680 14200 73712 365596
    }
}
