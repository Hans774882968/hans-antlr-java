showArr(int[] a) {
    for i: 0 to 10 print \n `${a[i]} `
    print ""
}

showArr2d(int[][] a, int d1, int d2) {
    for i: 0 to d1 {
        for j: 0 to d2 print \n `${a[i][j]} `
        print ""
    }
}

initPrimes(int lim) {
    var N = lim + 5
    var D = 19
    var vis = new boolean[N]
    var primes = new int[N]
    var pl = 0
    var pf = new int[N]
    var mu = new int[N]
    var sum = new int[19][N]

    vis[1] = true; pf[1] = 0; mu[1] = 1;
    for i: 2 to lim {
        if (vis[i] == false) {
            primes[pl] = i
            pl += 1
            pf[i] = 1
            mu[i] = -1
        }
        for var j = 0; j < pl; j += 1 {
            var p = primes[j]
            if i > lim / p break;
            vis[i * p] = true;
            pf[i * p] = pf[i] + 1;
            if (i % p == 0) break;
            mu[i * p] = -mu[i];
        }
    }
    showArr(primes)
    showArr(mu)
    showArr(pf)
    for x: 0 to D - 1 {
        for i: 1 to lim {
            if (pf[i] != x) continue;
            for (var j = i; j <= lim; j += i)
                sum[x][j] += mu[j / i];
        }
    }
    for x: 0 to D - 1 {
        for i: 1 to lim sum[x][i] += sum[x][i - 1];
    }
    for i: 1 to lim {
        for x: 1 to D - 1 sum[x][i] += sum[x - 1][i];
    }
    print "sum:"
    showArr2d(sum, 2, 10)
}

main(string[] args) {
    // TODO: 目前只写了预处理部分
    initPrimes(100000)
    var sc = new java.util.Scanner(java.lang.System.in)
    var T = sc.nextInt()
    for cas: 1 to T {
        var n = sc.nextInt()
        var m = sc.nextInt()
        var k = sc.nextInt()
        print `${n} ${m} ${k}`
    }
}
