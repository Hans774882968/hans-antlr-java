// decompile from cf148d.hant, AC https://codeforces.com/contest/148/submission/226253036
import java.util.Scanner;

public class cf148d {
    public static int N = 1005;
    public static double[][][] dp;

    static {
        dp = new double[N][N][2];
    }

    public static void main(String[] var0) {
        Scanner var1 = new Scanner(System.in);
        int var2 = var1.nextInt();
        int var3 = var1.nextInt();
        int var4;
        int var5;
        if (var2 != 0) {
            var4 = 1;

            while (true) {
                if (1 - var2 < 0) {
                    if (var4 - var2 > 0) {
                        break;
                    }
                } else if (var4 - var2 < 0) {
                    break;
                }

                var5 = 0;

                while (true) {
                    if (0 - 1 < 0) {
                        if (var5 - 1 > 0) {
                            break;
                        }
                    } else if (var5 - 1 < 0) {
                        break;
                    }

                    dp[var4][0][var5] = (double) 1;
                    if (0 - 1 < 0) {
                        ++var5;
                    } else {
                        --var5;
                    }
                }

                if (1 - var2 < 0) {
                    ++var4;
                } else {
                    --var4;
                }
            }
        }

        if (var3 != 0) {
            var4 = 1;

            while (true) {
                if (1 - var3 < 0) {
                    if (var4 - var3 > 0) {
                        break;
                    }
                } else if (var4 - var3 < 0) {
                    break;
                }

                var5 = 0;

                while (true) {
                    if (0 - 1 < 0) {
                        if (var5 - 1 > 0) {
                            break;
                        }
                    } else if (var5 - 1 < 0) {
                        break;
                    }

                    dp[0][var4][var5] = (double) 0;
                    if (0 - 1 < 0) {
                        ++var5;
                    } else {
                        --var5;
                    }
                }

                if (1 - var3 < 0) {
                    ++var4;
                } else {
                    --var4;
                }
            }
        }

        dp[0][0][0] = (double) 0;
        dp[0][0][1] = (double) 1;
        if (var2 != 0) {
            var4 = 1;

            while (true) {
                if (1 - var2 < 0) {
                    if (var4 - var2 > 0) {
                        break;
                    }
                } else if (var4 - var2 < 0) {
                    break;
                }

                if (var3 != 0) {
                    var5 = 1;

                    while (true) {
                        if (1 - var3 < 0) {
                            if (var5 - var3 > 0) {
                                break;
                            }
                        } else if (var5 - var3 < 0) {
                            break;
                        }

                        int var6 = 0;

                        while (true) {
                            if (0 - 1 < 0) {
                                if (var6 - 1 > 0) {
                                    break;
                                }
                            } else if (var6 - 1 < 0) {
                                break;
                            }

                            double var7 = 1.0 * (double) var4 / (double) (var4 + var5);
                            double var9 = 1.0 * (double) var5 / (double) (var4 + var5);
                            double var11 = 1.0 * (double) var4 / (double) (var4 + var5 - 1);
                            double var13 = 1.0 * (double) (var5 - 1) / (double) (var4 + var5 - 1);
                            dp[var4][var5][var6] = var7;
                            double[] var10000;
                            if (var6 - 0 != 0) {
                                double var15 = 0.0;
                                if (var5 - 2 >= 0) {
                                    var15 = dp[var4][var5 - 2][0];
                                }

                                var10000 = dp[var4][var5];
                                var10000[var6] += var9 * (var11 * ((double) 1 - dp[var4 - 1][var5 - 1][0])
                                        + var13 * ((double) 1 - var15));
                            } else {
                                var10000 = dp[var4][var5];
                                var10000[var6] += var9 * ((double) 1 - dp[var4][var5 - 1][1]);
                            }

                            if (0 - 1 < 0) {
                                ++var6;
                            } else {
                                --var6;
                            }
                        }

                        if (1 - var3 < 0) {
                            ++var5;
                        } else {
                            --var5;
                        }
                    }
                }

                if (1 - var2 < 0) {
                    ++var4;
                } else {
                    --var4;
                }
            }
        }

        System.out.println(dp[var2][var3][0]);
    }
}
