// decompile from lc640.hant, AC
class Solution {
    public void parse(String var0, int[] var1) {
        byte[] var2 = var0.getBytes();

        int var3;
        int var4;
        int var6;
        for (var3 = 0; var3 - var0.length() < 0; ++var3) {
            if (var2[var3] - 120 == 0) {
                for (var4 = var3 - 1; var4 - 0 >= 0 && Character.isDigit(var0.charAt(var4)); --var4) {
                }

                int var5 = 1;
                if (var4 + 1 - var3 < 0) {
                    var5 = Integer.parseInt(var0.substring(var4 + 1, var3));
                }

                var6 = 1;
                if (var4 - 0 >= 0 && var2[var4] - 45 == 0) {
                    var6 = -1;
                }

                var1[1] += var6 * var5;
            }
        }

        var3 = 0;

        while (true) {
            while (var3 - var0.length() < 0) {
                if (Character.isDigit(var0.charAt(var3))) {
                    for (var4 = var3 + 1; var4 - var0.length() < 0 && Character.isDigit(var0.charAt(var4)); ++var4) {
                    }

                    byte var8 = 1;
                    if (var4 - var0.length() < 0 && var2[var4] - 120 == 0) {
                        var8 = 0;
                    }

                    if (var8 != 0) {
                        var6 = 1;
                        if (var3 - 0 > 0 && var2[var3 - 1] - 45 == 0) {
                            var6 = -1;
                        }

                        int var7 = Integer.parseInt(var0.substring(var3, var4));
                        var1[0] += var6 * var7;
                    }

                    var3 = var4 + 1;
                } else {
                    ++var3;
                }
            }

            return;
        }
    }

    public String solveEquation(String var0) {
        String[] var1 = var0.split("=");
        int[][] var2 = new int[][] { { 0, 0 }, { 0, 0 } };

        int var3;
        for (var3 = 0; var3 - var2.length < 0; ++var3) {
            parse(var1[var3], var2[var3]);
        }

        if (var2[0][1] - var2[1][1] != 0) {
            var3 = (var2[1][0] - var2[0][0]) / (var2[0][1] - var2[1][1]);
            return "x=" + var3 + "";
        } else if (var2[0][0] - var2[1][0] != 0) {
            return "No solution";
        } else {
            return "Infinite solutions";
        }
    }
}
