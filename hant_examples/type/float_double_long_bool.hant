{
    var x = true
    print x
}

{
    var x = 2.1
    var y = 0.6
    print x + y // float 2.6999998 double 2.7
}

{
    var x = 1.2
    for var i = 1; i <= 10; i += 1 {
        x *= 1.2
    }
    print x // float 1.2 ** 11 = 7.4300866 double 7.430083706879999
}

{
    // 这个 case 说明 pow 运算符支持隐式类型转换
    var x = 1.2 ** 10
    print x // float 6.191739 double 6.191736422399997
    x **= 2
    print x // float 38.33763 double 38.337599924474716
    x *= 2.0
    print x // float 76.67526 double 76.67519984894943

    var y = 3 ** 4
    print y // 81
    y **= 1.3
    print y // 302，即 302.7126183265708 向下取整
    y **= 2
    print y // 91204

    var z1 = 3 ** 4.2
    print z1 // 100 即 100.90420610885693 向下取整

    var z2 = 3.2 ** 4.2
    print z2 // float 132.32132 double 132.32134568913267

    /* 目前不支持隐式类型转换
    x *= 2
    print x
    */
}

print "----- 2、8、10、16进制 -----"
{
    var x = 0x3f
    print x // 63
    x += 0B1001
    print x // 72
    x += 0o10
    print x // 80
    x += 0100
    print x // 180
    x += 0O12
    print x // 190
    x += 00
    print x // 190
    x += 010
    print x // 200
    /* 目前不支持隐式类型转换
    x += 1.5
    print x
    */
}

print "----- compare float and double -----"
{
    var x = 2.1f
    x *= 2.6f
    print x // 5.4599996
    var y = 2.1
    y *= 2.6
    print y // 5.460000000000001
}

print "----- long -----"
{
    var x = 9223372036854775807L
    print x + 1l // -9223372036854775808
    var x = -0x12345678901l
    print x // -1250999896321
    var y = 100000l * 100000l % 998244353l
    print y // 17556470
    var z = 3l << 40
    print z // 3298534883328
}
print "整除分块："
{
    var ans = 0l
    var mx = 0l
    var n = 100000l
    var mod = 998244353l
    for var L = 1l; L <= n; {
        var R = n / (n / L)
        ans = (ans + (R - L + 1l) * L % mod) % mod
        if mx < (R - L + 1l) * L mx = (R - L + 1l) * L
        L = R + 1l
    }
    print mx // 2500050000
    print ans // 556021808
}
